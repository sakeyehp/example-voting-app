pipeline {
    agent{
        docker{
            image 'maven:3.6.1-jdk-8-slim'
            args '-v $HOME/.m2:/root/.m2'
        }
    }

    stages{
        stage("build"){
            // when {
            //     changeset "**/worker/**"
            // }

            steps{
                echo "Compiling worker app"
                dir('worker'){
                    sh 'mvn compile'
                }
            }
        }

        stage("test"){
            // when {
            //     changeset "**/worker/**"
            // }

            steps{
                echo "Running Unit Test on worker app"
                dir('worker'){
                    sh 'mvn clean test'
                }
            }
        }

        stage("package"){
            // when{
            //     branch 'master'
            //     changeset "**/worker/**"
            // }
            steps{
                echo "Packaging worker app into a jarfile"
                dir('worker'){
                    sh 'mvn package -DskipTests'
                    archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                }
            }
        }
        stage('docker-package'){
            steps{
              echo 'Packaging worker application with docker'
              script{
                docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                    def workerImage = docker.build("sakeyehp/worker:v${env.BUILD_ID}", "./worker")
                    workerImage.push()
                    workerImage.push("latest")
                }
              }
            }
        }
        
    }

    post{
        always{
            echo "The job is completed"
        }
        failure{
            slackSend (channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
            }
        success{
            slackSend (channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}